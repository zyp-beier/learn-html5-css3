.content{
    display: grid;
    /*33% 33% 33%*/
    /* grid-template-columns: 1fr 1fr 1fr; */
    /* grid-template-rows: 30% 30% 30%; */
    grid-template-columns: repeat(4,1fr);
    /* grid-template-columns: repeat(auto-fill,100px); */
    /* grid-template-rows: repeat(2,1fr); */
    grid-template-rows:repeat(2,1fr);
    grid-column-gap:20px;
}
.item{
    width:100%;
}
.item img{
    width: 100%;
}





.contentOne{
    display: inline-grid;
}
/*****************************************容器属性*******************************************/
/*
1.
display: （（布局））
grid
inline-grid
*/

/* 
2.
grid-template-columns （（定义每一列的列宽））
100px 100px 100px
33.33% 33.33% 33.33%
 repeat(3, 33.33%)
 repeat(auto-fill, 100px)
 1fr 1fr
 1fr 1fr minmax(100px, 1fr);最小值最大值（范围之中）
 100px auto 100px;有自己决定
grid-template-rows （（定义每一行的行高））
100px 100px 100px
33.33% 33.33% 33.33%
 repeat(3, 33.33%)
 repeat(auto-fill, 100px)
 1fr 1fr
 1fr 1fr minmax(100px, 1fr);最小值最大值（范围之中）
 100px auto 100px;有自己决定
*/

/* 
3.
grid-row-gap （（设置行与行的间隔（行间距）））
20px
grid-column-gap （（设置列与列的间隔（列间距）））
20px
grid-gap（（合并简写））
20px
20px 30px
*/
/*
4.
justify-items （（设置单元格内容的水平位置（左中右））
justify-items: start | end | center | stretch（拉伸，占满单元格的整个宽度（默认值））;
align-items（（设置单元格内容的垂直位置（上中下）））
align-items: start | end | center | stretch（拉伸，占满单元格的整个宽度（默认值））;
place-items（align-content属性和justify-content属性的合并简写形式）
*/
/*
5.
grid-auto-flow((设置顺序))
grid-auto-flow: row;（默认值）
grid-auto-flow: column;
grid-auto-flow: row dense;(先行后列，紧密填满，尽量不出现空格)
*/

/************************不常用*********************************/
/*

grid-template-areas ((定义区域))
grid-template-areas: 'a a a'
                     'b b b'
                     'c c c';
grid-template-areas: "header header header"
                     "main main sidebar"
                     "footer footer footer";
grid-template-areas: 'a . c'
                     'd . f'
                     'g . i';
*/


/***************************************************项目属性********************************************************/
/* 
grid-column-start （（左边框所在的垂直网格线））
grid-column-end （（右边框所在的垂直网格线））
grid-column（（grid-column-start和grid-column-end的合并简写形式））
grid-column: 1 / 3;
grid-row-start （（上边框所在的水平网格线））
grid-row-end （（下边框所在的水平网格线））
grid-row （（grid-row-start属性和grid-row-end的合并简写形式））
grid-row: 1 / 2; 
*/
/*
grid-area（（属性还可用作grid-row-start、grid-column-start、grid-row-end、grid-column-end的合并简写形式，直接指定项目的位置。））
 grid-area: e;
*/
/*
justify-self属性设置单元格内容的水平位置（左中右），跟justify-items属性的用法完全一致，但只作用于单个项目。

align-self属性设置单元格内容的垂直位置（上中下），跟align-items属性的用法完全一致，也是只作用于单个项目

*/